{
   "outputs":{

   },
   "variables":{

   },
   "$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
   "functions":[

   ],
   "apiProfile":"",
   "resources":[
      {
         "apiVersion":"2016-09-01",
         "name":"resource_ref_",
         "type":"Microsoft.Compute/virtualMachines",
         "properties":{
            "osProfile":{
               "windowsConfiguration":{
                  "enableAutomaticUpdates":true
               },
               "adminPassword":"[parameters('adminPassword')]"
            }
         }
      },
      {
         "apiVersion":"2018-01-01",
         "name":"[variables('apiManagementServiceName')]",
         "location":"[parameters('location')]",
         "type":"Microsoft.ApiManagement/service",
         "sku":{
            "name":"[parameters('sku')]",
            "capacity":"[parameters('skuCount')]"
         },
         "properties":{
            "publisherName":"[parameters('publisherName')]",
            "hostnameConfigurations":[
               {
                  "encodedCertificate":"[parameters('proxyCustomHostnameBase64EncodedPfxCertificate')]",
                  "negotiateClientCertificate":false,
                  "hostName":"[parameters('proxyCustomHostname')]",
                  "type":"Proxy",
                  "certificatePassword":"[parameters('proxySSLCertificatePassword')]"
               },
               {
                  "type":"Proxy",
                  "hostName":"[parameters('proxyCustomHostname1')]",
                  "encodedCertificate":"[parameters('proxyCustomHostnameBase64EncodedPfxCertificate1')]",
                  "certificatePassword":"[parameters('proxySSLCertificatePassword1')]",
                  "negotiateClientCertificate":false
               }
            ],
            "publisherEmail":"[parameters('publisherEmail')]"
         },
         "tags":{

         },
         "resources":[
            {
               "apiVersion":"2017-03-01",
               "type":"certificates",
               "name":"exampleCertificate",
               "dependsOn":[
                  "[concat('Microsoft.ApiManagement/service/', variables('apiManagementServiceName'))]"
               ],
               "properties":{
                  "data":"[parameters('mutualAuthenticationCertificate')]",
                  "password":"[parameters('certificatePassword')]"
               }
            }
         ]
      },
      {
         "apiVersion":"2016-09-01",
         "name":"resource_ref_",
         "type":"Microsoft.Compute/virtualMachines",
         "properties":{
            "storageProfile":{
               "osDisk":{
                  "encryptionSettings":{
                     "enabled":true
                  }
               }
            }
         }
      },
      {
         "apiVersion":"2016-09-01",
         "name":"resource_ref_",
         "type":"Microsoft.Network/applicationGateways",
         "properties":{
            "webApplicationFirewallConfiguration":{
               "enabled":true
            }
         }
      },
      {
         "apiVersion":"2016-09-01",
         "name":"resource_ref_",
         "type":"Microsoft.Storage/storageAccounts",
         "properties":{
            "encryption":{
               "services":{
                  "blob":{
                     "enabled":true
                  }
               }
            }
         }
      },
      {
         "apiVersion":"2016-09-01",
         "name":"resource_ref_",
         "type":"Microsoft.Storage/storageAccounts",
         "properties":{
            "encryption":{
               "services":{
                  "file":{
                     "enabled":true
                  }
               }
            }
         }
      },
      {
         "apiVersion":"2016-09-01",
         "name":"resource_ref_",
         "type":"Microsoft.Sql/servers/auditingSettings",
         "properties":{
            "retentionDays":100
         }
      },
      {
         "apiVersion":"2016-09-01",
         "name":"resource_ref_",
         "type":"Microsoft.Sql/servers/databases/auditingSettings",
         "properties":{
            "retentionDays":100
         }
      },
      {
         "apiVersion":"2016-09-01",
         "name":"resource_ref_",
         "type":"Microsoft.Sql/servers/databases/securityAlertPolicies",
         "properties":{
            "disabledAlerts":[

            ],
            "retentionDays":100
         }
      },
      {
         "apiVersion":"2016-09-01",
         "name":"resource_ref_",
         "type":"Microsoft.Sql/servers/securityAlertPolicies",
         "properties":{
            "disabledAlerts":[

            ],
            "retentionDays":100
         }
      },
      {
         "apiVersion":"2016-09-01",
         "name":"resource_ref_",
         "type":"Microsoft.insights/logprofiles",
         "properties":{
            "retentionPolicy":{
               "days":400,
               "enabled":true
            }
         }
      },
      {
         "apiVersion":"2016-09-01",
         "name":"resource_ref_",
         "type":"Microsoft.insights/activityLogAlerts",
         "properties":{
            "condition":{
               "allOf":[
                  {
                     "field":"operationName",
                     "equals":"Microsoft.Network/networkSecurityGroups/write"
                  },
                  {
                     "field":"operationName",
                     "equals":"Microsoft.Authorization/policyAssignments/write"
                  },
                  {
                     "field":"operationName",
                     "equals":"Microsoft.Network/networkSecurityGroups/delete"
                  },
                  {
                     "field":"operationName",
                     "equals":"Microsoft.Network/networkSecurityGroups/securityRules/write"
                  },
                  {
                     "field":"operationName",
                     "equals":"Microsoft.Network/networkSecurityGroups/securityRules/delete"
                  },
                  {
                     "field":"operationName",
                     "equals":"Microsoft.Security/securitySolutions/write"
                  },
                  {
                     "field":"operationName",
                     "equals":"Microsoft.Security/securitySolutions/delete"
                  },
                  {
                     "field":"operationName",
                     "equals":"Microsoft.Sql/servers/firewallRules/write"
                  },
                  {
                     "field":"operationName",
                     "equals":"Microsoft.Sql/servers/firewallRules/delete"
                  },
                  {
                     "field":"operationName",
                     "equals":"Microsoft.Security/policies/write"
                  }
               ]
            },
            "enabled":true
         }
      },
      {
         "apiVersion":"2016-09-01",
         "name":"resource_ref_",
         "type":"Microsoft.Compute/virtualMachines",
         "properties":{
            "osProfile":{
               "linuxConfiguration":{
                  "disablePasswordAuthentication":true
               }
            }
         }
      },
      {
         "apiVersion":"2016-09-01",
         "name":"resource_ref_",
         "type":"Microsoft.Compute/virtualMachines",
         "properties":{
            "storageProfile":{
               "osDisk":{
                  "encryptionSettings":{
                     "enabled":true
                  }
               }
            }
         }
      },
      {
         "apiVersion":"2016-09-01",
         "name":"resource_ref_",
         "resources":[
            {
               "name":"current",
               "type":"transparentDataEncryption",
               "properties":{
                  "status":"Enabled"
               }
            }
         ],
         "type":"Microsoft.Sql/servers/databases",
         "properties":{
            "collations":"randomn string"
         }
      },
      {
         "apiVersion":"2016-09-01",
         "name":"resource_ref_",
         "type":"",
         "properties":{
            "":""
         }
      },
      {
         "name":"[concat(parameters('automationAccountName'), '/', variables('azureCredentials'))]",
         "type":"Microsoft.Automation/automationAccounts/credentials",
         "apiVersion":"2020-01-13-preview",
         "dependsOn":[
            "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName'))]"
         ],
         "properties":{
            "description":"Azure Subscription Credentials",
            "password":"[parameters('azureAdminPwd')]",
            "userName":"[parameters('azureAdmin')]"
         }
      },
      {
         "name":"[parameters('automationAccountName')]",
         "type":"Microsoft.Automation/automationAccounts",
         "apiVersion":"2015-10-31",
         "location":"[parameters('automationRegion')]",
         "dependsOn":[

         ],
         "tags":{

         },
         "properties":{
            "sku":{
               "name":"[parameters('automationPricingTier')]"
            }
         },
         "resources":[
            {
               "name":"[concat(parameters('automationAccountName'), '/', variables('automation').Asset.omsHypervReplicaRunAsAccount.name)]",
               "type":"Microsoft.Automation/automationAccounts/credentials",
               "apiVersion":"2015-10-31",
               "location":"[parameters('automationRegion')]",
               "dependsOn":[
                  "[resourceId('Microsoft.Automation/automationAccounts/', parameters('automationAccountName'))]"
               ],
               "tags":{

               },
               "properties":{
                  "userName":"[parameters('onPremisesRunAsUserName')]",
                  "password":"[parameters('onPremisesRunAsPassword')]",
                  "description":"[variables('automation').Asset.omsHypervReplicaRunAsAccount.description]"
               }
            }
         ]
      },
      {
         "name":"[variables('certname')]",
         "type":"Microsoft.Batch/batchAccounts/certificates",
         "apiVersion":"2019-04-01",
         "properties":{
            "format":"Pfx",
            "thumbprint":"[parameters('certthumbprint')]",
            "thumbprintAlgorithm":"SHA1",
            "data":"[parameters('certdata')]",
            "password":"[parameters('certpassword')]"
         }
      },
      {
         "type":"Microsoft.Blockchain/blockchainMembers",
         "apiVersion":"2018-06-01-preview",
         "name":"[parameters('bcMemberName')]",
         "location":"[parameters('location')]",
         "tags":{
            "consortium":"Consortium"
         },
         "sku":{
            "name":"B0",
            "tier":"Basic"
         },
         "properties":{
            "protocol":"Quorum",
            "consensus":"Default",
            "password":"[parameters('memberPassword')]",
            "validatorNodesSku":{
               "capacity":1
            },
            "consortium":"[concat('Consort', parameters('bcMemberName'))]",
            "consortiumManagementAccountPassword":"[parameters('memberPassword')]",
            "firewallRules":[
               {
                  "ruleName":"AllowAll",
                  "startIpAddress":"0.0.0.0",
                  "endIpAddress":"255.255.255.255"
               }
            ]
         }
      },
      {
         "name":"[parameters('dbServerName')]",
         "type":"Microsoft.Sql/servers",
         "location":"[parameters('location')]",
         "apiVersion":"2014-04-01-preview",
         "properties":{
            "administratorLogin":"[parameters('dbAdministratorLogin')]",
            "administratorLoginPassword":"[parameters('dbAdministratorLoginPassword')]",
            "version":"12.0"
         },
         "resources":[
            {
               "name":"Import",
               "type":"Extensions",
               "apiVersion":"2014-04-01-preview",
               "dependsOn":[

               ],
               "properties":{
                  "administratorLoginPassword":"[parameters('targetSqlDbAdministratorPassword')]"
               }
            }
         ]
      },
      {
         "apiVersion":"2015-02-01",
         "name":"[variables('umbracoAdminWebAppName')]",
         "type":"Microsoft.Web/Sites",
         "location":"[parameters('location')]",
         "tags":{
            "[concat('hidden-related:', '/subscriptions/', subscription().subscriptionId,'/resourcegroups/', resourceGroup().name, '/providers/Microsoft.Web/serverfarms/', variables('appServicePlanName'))]":"empty"
         },
         "dependsOn":[
            "[concat('Microsoft.Web/serverFarms/', variables('appServicePlanName'))]"
         ],
         "properties":{
            "name":"[variables('umbracoAdminWebAppName')]",
            "serverFarmId":"[concat('/subscriptions/', subscription().subscriptionId,'/resourcegroups/',resourceGroup().name, '/providers/Microsoft.Web/serverfarms/', variables('appServicePlanName'))]",
            "hostingEnvironment":""
         },
         "resources":[
            {
               "apiVersion":"2014-06-01",
               "name":"MSDeploy",
               "type":"Extensions",
               "dependsOn":[
                  "[concat('Microsoft.Web/Sites/', variables('umbracoAdminWebAppName'))]",
                  "[concat('Microsoft.Web/Sites/',variables('umbracoAdminWebAppName'), '/config/web')]",
                  "[concat('Microsoft.Sql/servers/', parameters('dbServerName'), '/databases/', parameters('dbName'))]",
                  "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
               ],
               "properties":{
                  "packageUri":"https://auxmktplceprod.blob.core.windows.net/packages/ScalableUmbracoCms.WebPI.7.4.3.zip",
                  "dbType":"SQL",
                  "connectionString":"[concat('Data Source=tcp:', reference(concat('Microsoft.Sql/servers/', parameters('dbServerName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', parameters('dbName'), ';User Id=', parameters('dbAdministratorLogin'), '@', parameters('dbServerName'), ';Password=', parameters('dbAdministratorLoginPassword'), ';')]",
                  "setParameters":{
                     "Application Path":"[variables('umbracoAdminWebAppName')]",
                     "Database Server":"[reference(concat('Microsoft.Sql/servers/', parameters('dbServerName'))).fullyQualifiedDomainName]",
                     "Database Name":"[parameters('dbName')]",
                     "Database Username":"[concat(parameters('nonAdminDatabaseUsername'),'admin')]",
                     "Database Password":"[parameters('nonAdminDatabasePassword')]",
                     "Database Administrator":"[parameters('dbAdministratorLogin')]",
                     "Database Administrator Password":"[parameters('dbAdministratorLoginPassword')]",
                     "azurestoragerootUrl":"[concat('https://',variables('storageAccountName'), '.blob.core.windows.net')]",
                     "azurestoragecontainerName":"media",
                     "azurestorageconnectionString":"[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'), ';AccountKey=' , listKeys(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2015-05-01-preview').key1 )]",
                     "rediscachehost":"[concat(parameters('redisCacheName'), '.redis.cache.windows.net')]",
                     "rediscacheport":"6379",
                     "rediscacheaccessKey":"[listKeys(resourceId('Microsoft.Cache/Redis', parameters('redisCacheName')), '2014-04-01').primaryKey]",
                     "azurestoragecacheControl":"*|public, max-age=31536000;js|no-cache"
                  }
               }
            },
            {
               "name":"appsettings",
               "type":"config",
               "apiVersion":"2018-02-01",
               "comments":"This are the generated settings for the Sonar jdbc connectionstring",
               "dependsOn":[
                  "[resourceId('Microsoft.Web/sites', parameters('siteName'))]"
               ],
               "tags":{
                  "displayName":"SonarappSettings"
               },
               "properties":{
                  "SONARQUBE_JDBC_URL":"[concat('jdbc:mysql://',  reference(resourceId('Microsoft.DBforMySQL/servers',variables('serverName'))).fullyQualifiedDomainName , ':3306/',variables('databaseName'),'?verifyServerCertificate=true&useSSL=true&requireSSL=false&useUnicode=true&characterEncoding=utf8')]",
                  "SONARQUBE_JDBC_USERNAME":"[variables('jdbcSonarUserName')]",
                  "SONARQUBE_JDBC_PASSWORD":"[parameters('administratorLoginPassword')]"
               }
            }
         ]
      },
      {
         "name":"[variables('adPDCVMName')]",
         "type":"Microsoft.Compute/virtualMachines",
         "apiVersion":"2019-12-01",
         "location":"[parameters('location')]",
         "properties":{
            "osProfile":{
               "computerName":"[variables('adPDCVMName')]",
               "adminUsername":"[parameters('adminUsername')]",
               "adminPassword":"[parameters('adminPassword')]"
            }
         },
         "resources":[
            {
               "name":"CreateADForest",
               "type":"extensions",
               "apiVersion":"2019-12-01",
               "location":"[parameters('location')]",
               "dependsOn":[
                  "[resourceId('Microsoft.Compute/virtualMachines', variables('adPDCVMName'))]"
               ],
               "protectedSettings":{
                  "Items":{
                     "AdminPassword":"[parameters('adminPassword')]",
                     "SAPassword":"[parameters('dbSAUserPassword')]"
                  }
               },
               "settings":{
                  "configuration":{

                  },
                  "configurationArguments":{
                     "nodeName":"[variables('vm1Name')]",
                     "vmNumber":"vm1",
                     "backendCert":"[parameters('backendCertData')]",
                     "backendCertPw":"[parameters('backendCertPassword')]",
                     "backendCertDnsName":"[parameters('backendCertDnsName')]",
                     "webConfigPath":"[variables('webConfigFullPath')]",
                     "defaultHtmPath":"[variables('vm1DefaultHtmFullPath')]"
                  }
               }
            }
         ]
      },
      {
         "name":"[concat(variables('generalSettings').vmSQLName,'/ConfigureSQLVM')]",
         "type":"Microsoft.Compute/virtualMachines/extensions",
         "location":"[parameters('location')]",
         "apiVersion":"2019-03-01",
         "dependsOn":[
            "[resourceId('Microsoft.Compute/virtualMachines', variables('generalSettings').vmDCName)]",
            "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('generalSettings').vmDCName, 'ConfigureDCVM')]",
            "[resourceId('Microsoft.Compute/virtualMachines', variables('generalSettings').vmSQLName)]"
         ],
         "tags":{
            "displayName":"[concat(variables('generalSettings').vmSQLName,'/ConfigureSQLVM')]"
         },
         "properties":{
            "publisher":"Microsoft.Powershell",
            "type":"DSC",
            "typeHandlerVersion":"2.9",
            "autoUpgradeMinorVersion":true,
            "forceUpdateTag":"[variables('dscConfigureSQLVM').forceUpdateTag]",
            "settings":{
               "wmfVersion":"latest",
               "configuration":{
                  "url":"[variables('dscConfigureSQLVM').scriptFileUri]",
                  "script":"[variables('dscConfigureSQLVM').script]",
                  "function":"[variables('dscConfigureSQLVM').function]"
               },
               "privacy":{
                  "dataCollection":"enable"
               },
               "properties":{
                  "azureAccountPassword":"[parameters('azureAccountPassword')]",
                  "VMAdminPassword":"[variables('vmAdminPassword')]"
               },
               "configurationArguments":{
                  "nodeName":"[variables('vm1Name')]",
                  "vmNumber":"vm1",
                  "backendCert":"[parameters('backendCertData')]",
                  "backendCertPw":"[parameters('backendCertPassword')]",
                  "backendCertDnsName":"[parameters('backendCertDnsName')]",
                  "webConfigPath":"[variables('webConfigFullPath')]",
                  "defaultHtmPath":"[variables('vm1DefaultHtmFullPath')]"
               }
            },
            "protectedSettings":{
               "Password":"[parameters('sqlAutobackupEncryptionPassword')]",
               "environment":{
                  "MYSQL_ROOT_PASSWORD":"[parameters('mysqlPassword')]"
               },
               "password":"[parameters('password')]",
               "configurationArguments":{
                  "DomainAdminCreds":{
                     "UserName":"[parameters('adminUsername')]",
                     "Password":"parameters("
                  },
                  "SqlSvcCreds":{
                     "UserName":"[variables('generalSettings').sqlSvcUserName]",
                     "Password":"parameters("
                  },
                  "AdminCreds":{
                     "UserName":"[parameters('adminUsername')]",
                     "Password":"parameters("
                  },
                  "AdfsSvcCreds":{
                     "UserName":"[variables('generalSettings').adfsSvcUserName]",
                     "Password":"parameters("
                  },
                  "SPFarmCreds":{
                     "UserName":"[variables('generalSettings').spFarmUserName]",
                     "Password":"[variables('generalSettings').spFarmPassword]"
                  },
                  "SPSvcCreds":{
                     "UserName":"[variables('generalSettings').spSvcUserName]",
                     "Password":"[variables('generalSettings').spSvcPassword]"
                  },
                  "SPAppPoolCreds":{
                     "UserName":"[variables('generalSettings').spAppPoolUserName]",
                     "Password":"[variables('generalSettings').spAppPoolPassword]"
                  },
                  "SPPassphraseCreds":{
                     "UserName":"Passphrase",
                     "Password":"[variables('generalSettings').spPassphrase]"
                  },
                  "SPSuperUserCreds":{
                     "UserName":"[variables('generalSettings').spSuperUserName]",
                     "Password":"[parameters('serviceAccountsPassword')]"
                  },
                  "SPSuperReaderCreds":{
                     "UserName":"[variables('generalSettings').spSuperReaderName]",
                     "Password":"[parameters('serviceAccountsPassword')]"
                  }
               },
               "secret":"[parameters('secret')]",
               "Items":{
                  "AdminPassword":"[parameters('adminPassword')]",
                  "SAPassword":"[parameters('dbSAUserPassword')]"
               },
               "PrivateKeyVaultCredentialSettings":{
                  "AzureKeyVaultUrl":"[parameters('sqlAkvUrl')]",
                  "ServicePrincipalName":"[parameters('sqlAkvPrincipalName')]",
                  "ServicePrincipalSecret":"[parameters('sqlAkvPrincipalSecret')]"
               },
               "AADClientSecret": "[parameters('aadClientSecret')]"
            },
            "SQLAuthUpdatePassword": "[parameters('sourceSqlAuthenticationPassword')]"
         }
      },
      {
         "type":"Microsoft.Compute/virtualMachineScaleSets",
         "apiVersion":"2019-07-01",
         "name":"[parameters('vmssName')]",
         "tags":{

         },
         "dependsOn":[

         ],
         "location":"[parameters('location')]",
         "sku":{

         },
         "properties":{
            "overprovision":false,
            "upgradePolicy":{

            },
            "virtualMachineProfile":{
               "storageProfile":{

               },
               "osProfile":{
                  "computerNamePrefix":"[parameters('vmssName')]",
                  "adminUsername":"[parameters('adminUsername')]",
                  "adminPassword":"[parameters('adminKey')]",
                  "linuxConfiguration":{
                     "disablePasswordAuthentication":true,
                     "ssh":{
                        "publicKeys":[
                           {
                              "path":"[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                              "keyData":"[parameters('adminKey')]"
                           }
                        ]
                     }
                  }
               },
               "networkProfile":{

               },
               "extensionProfile":{

               }
            }
         }
      },
      {
         "apiVersion":"2017-03-30",
         "type":"Microsoft.Compute/virtualMachines",
         "name":"[parameters('vmName')]",
         "location":"[resourceGroup().location]",
         "tags":{

         },
         "dependsOn":[

         ],
         "properties":{
            "hardwareProfile":{

            },
            "osProfile":{

            },
            "storageProfile":{

            },
            "networkProfile":{
               "networkInterfaces":[

               ]
            }
         },
         "resources":[
            {
               "name":"DSCExt1",
               "type":"extensions",
               "location":"[resourceGroup().location]",
               "apiVersion":"2015-05-01-preview",
               "dependsOn":[

               ],
               "tags":{

               },
               "properties":{
                  "publisher":"Microsoft.Powershell",
                  "type":"DSC",
                  "typeHandlerVersion":"2.19",
                  "autoUpgradeMinorVersion":true,
                  "settings":{
                     "modulesUrl":"[parameters('modulesUrl')]",
                     "configurationFunction":"ConfigureWebServer.ps1\\Main",
                     "properties":{
                        "SQLAdminAuthCreds":{
                           "userName":"[parameters('adminUsername')]",
                           "Password":"privateSettingsRef:AdminPassword"
                        },
                        "SQLAuthCreds":{
                           "userName":"[parameters('dbSAUserName')]",
                           "Password":"privateSettingsRef:SAPassword"
                        },
                        "MachineName":"[parameters('vmName')]",
                        "WebDeployPackagePath":"[parameters('webdeploypkg')]",
                        "connectionPassword":"[parameters('sqDB_Admin_Password')]",
                        "UserName":"[parameters('adminUsername')]",
                        "Password":"[parameters('adminPassword')]",
                        "DbServerName":"[parameters('DatabaseServerName')]",
                        "DbName":"[parameters('databaseName')]",
                        "DbUserName":"[parameters('databaseServerAdminLogin')]",
                        "DbPassword":"[parameters('databaseServerAdminLoginPassword')]"
                     }
                  },
                  "protectedSettings":{
                     "SQLAuthUpdatePassword":"[parameters('sourceSqlAuthenticationPassword')]",
                     "configurationArguments":{
                        "AdminCreds":{
                           "UserName":"[parameters('adminUsername')]",
                           "Password":"parameters("
                        },
                        "AdfsSvcCreds":{
                           "UserName":"[variables('generalSettings').adfsSvcUserName]",
                           "Password":"parameters("
                        },
                        "DomainAdminCreds":{
                           "UserName":"[parameters('adminUsername')]",
                           "Password":"[parameters('adminPassword')]"
                        },
                        "SPSetupCreds":{
                           "UserName":"[variables('generalSettings').spSetupUserName]",
                           "Password":"[variables('generalSettings').spSetupPassword]"
                        },
                        "SPFarmCreds":{
                           "UserName":"[variables('generalSettings').spFarmUserName]",
                           "Password":"[variables('generalSettings').spFarmPassword]"
                        },
                        "SPSvcCreds":{
                           "UserName":"[variables('generalSettings').spSvcUserName]",
                           "Password":"[variables('generalSettings').spSvcPassword]"
                        },
                        "SPAppPoolCreds":{
                           "UserName":"[variables('generalSettings').spAppPoolUserName]",
                           "Password":"[variables('generalSettings').spAppPoolPassword]"
                        },
                        "SPPassphraseCreds":{
                           "UserName":"Passphrase",
                           "Password":"[variables('generalSettings').spPassphrase]"
                        },
                        "SPSuperUserCreds":{
                           "UserName":"[variables('generalSettings').spSuperUserName]",
                           "Password":"[parameters('serviceAccountsPassword')]"
                        },
                        "SPSuperReaderCreds":{
                           "UserName":"[variables('generalSettings').spSuperReaderName]",
                           "Password":"[parameters('serviceAccountsPassword')]"
                        }
                     },
                     "PrivateKeyVaultCredentialSettings":{
                        "AzureKeyVaultUrl":"[parameters('sqlAkvUrl')]",
                        "ServicePrincipalName":"[parameters('sqlAkvPrincipalName')]",
                        "ServicePrincipalSecret":"[parameters('sqlAkvPrincipalSecret')]"
                     },
                     "AADClientSecret": "[parameters('aadClientSecret')]"
                  }
               }
            }
         ]
      },
      {
         "name":"mysql",
         "type":"Microsoft.Resources/deployments",
         "apiVersion":"2015-01-01",
         "properties":{
            "mode":"Incremental",
            "templateLink":{

            },
            "parameters":{
               "customData":{
                  "value":{
                     "CONCOURSE_PASSWORD":"[parameters('concoursePassword')]"
                  }
               },
               "dnsName":{

               },
               "location":{

               },
               "vmUserName":{

               },
               "adminPasswordOrKey":{
                  "value":"[parameters('adminPasswordOrKey')]"
               },
               "authenticationType":{
                  "value":"[parameters('authenticationType')]"
               },
               "mysqlRootPassword":{
                  "value":"[parameters('mysqlUserPassword')]"
               },
               "mysqlReplicationPassword":{
                  "value":"[variables('mysqlReplicationPassword')]"
               },
               "mysqlProbePassword":{
                  "value":"[variables('mysqlProbePassword')]"
               },
               "ansibleTowerAdminPassword":{
                  "value":"[parameters('ansibleTowerAdminPassword')]"
               },
               "ansibleTowerDatabasePassword":{
                  "value":"[parameters('ansibleTowerDatabasePassword')]"
               },
               "aadClientSecret":{
                  "value":"[parameters('aadClientSecret')]"
               },
               "openshiftPassword":{
                  "value":"[parameters('openshiftPassword')]"
               },
               "rhelPassword":{
                  "value":"[parameters('rhelPassword')]"
               },
               "tempPassword":{
                  "value":"[variables('tempPassword')]"
               },
               "ocpassword":{
                  "value":"[parameters('openshiftPassword')]"
               },
               "sshPrivateKey":{
                  "reference":{
                     "secretName":"[parameters('keyVaultSecretName')]"
                  }
               },
               "spClientSecret":{
                  "value":"[parameters('spClientSecret')]"
               },
               "linuxAdminPassword":{
                  "value":"[parameters('linuxAdminPassword')]"
               },
               "clientSecret":{
                  "value":"[parameters('clientSecret')]"
               },
               "adminPasswordorSSHKey":{
                  "value":"[parameters('adminPasswordorSSHKey')]"
               },
               "sapadmPassword":{
                  "value":"[parameters('sapadmPassword')]"
               },
               "glassfishAdminPassword":{
                  "value":"[parameters('glassfishAdminPassword')]"
               },
               "AzureClientSecret":{
                  "value":"[parameters('AzureClientSecret')]"
               },
               "mongoAdminPassword":{
                  "value":"[parameters('mongoAdminPassword')]"
               },
               "mongoSSLCertPassword":{
                  "value":"[parameters('mongoSSLCertPassword')]"
               },
               "DbAdminPassword":{
                  "value":"[parameters('mysqlRootPassword')]"
               },
               "vmAdminPasswordOrPublicKeyTrendDSM":{
                  "value":"[parameters('vmAdminPasswordOrPublicKeyTrendDSM')]"
               },
               "dsmAdminPassword":{
                  "value":"[parameters('dsmAdminPassword')]"
               },
               "vmAdminPasswordOrPublicKeyOrchServer":{
                  "value":"[parameters('vmAdminPasswordOrPublicKeyOrchServer')]"
               },
               "vmAdminPasswordOrPublicKeyChefServer":{
                  "value":"[parameters('vmAdminPasswordOrPublicKeyChefServer')]"
               },
               "chefUserPassword":{
                  "value":"[parameters('chefUserPassword')]"
               },
               "adminPasswordDSAgentWindows":{
                  "value":"[parameters('adminPasswordDSAgentWindows')]"
               },
               "adminPasswordOrPublicKeyDSAgent":{
                  "value":"[parameters('adminPasswordOrPublicKeyDSAgent')]"
               },
               "TenantActivationPassword":{
                  "value":"[variables('TenantActivationPassword')]"
               },
               "adminPasswordChefWorkstation":{
                  "value":"[parameters('adminPasswordChefWorkstation')]"
               },
               "clusterLoginPassword":{
                  "value":"[variables('datameerHDInsightCluster').clusterLoginPassword]"
               },
               "sshPassword":{
                  "value":"[variables('datameerHDInsightCluster').sshPassword]"
               },
               "replicatorPassword":{
                  "value":"[parameters('replicatorPassword')]"
               },
               "jenkinsAdminPassword":{
                  "value":"[parameters('jenkinsAdminPassword')]"
               },
               "ucpAdminPassword":{
                  "value":"[parameters('ucpAdminPassword')]"
               },
               "acrPassword":{
                  "value":"[listCredentials(resourceId('Microsoft.ContainerRegistry/registries', variables('acrName')), '2019-05-01').passwords[0].value]"
               },
               "sqlServicePassword":{
                  "value":"[parameters('sqlServicePassword')]"
               },
               "mysqlPassword":{
                  "value":"[parameters('mysqlPassword')]"
               },
               "domainAccountPassword":{
                  "value":"[parameters('domainAccountPassword')]"
               },
               "clusterSecret":{
                  "value":"[parameters('clusterSecret')]"
               },
               "splunkAdminPassword":{
                  "value":"[parameters('splunkAdminPassword')]"
               },
               "vmAdminPasswordTrendDSM":{
                  "value":"[parameters('vmAdminPasswordTrendDSM')]"
               },
               "vmAdminPasswordSplunkEnterprise":{
                  "value":"[parameters('vmAdminPasswordSplunkEnterprise')]"
               },
               "adminPasswordDSAgent":{
                  "value":"[parameters('adminPasswordDSAgent')]"
               },
               "TrendAdminPassword":{
                  "type":"string",
                  "value":"[parameters('vmAdminPasswordTrendDSM')]"
               },
               "chefAutomateAdminPassword":{
                  "type":"string",
                  "value":"[parameters('vmAdminPasswordChefAutomate')]"
               },
               "sqlServerServiceAccountPassword":{
                  "value":"[parameters('sqlServerServiceAccountPassword')]"
               },
               "cmPassword":{
                  "value":"[parameters('cmPassword')]"
               },
               "azureADApplicationSecret":{
                  "value":"[parameters('azureADApplicationSecret')]"
               },
               "machineSettings":{
                  "value":{
                     "adminUsername":"[variables('machineSettings').adminUsername]",
                     "adminPassword":"[variables('machineSettings').adminPassword]",
                     "machineNamePrefix":"[variables('machineSettings').machineNamePrefix]",
                     "osImageReference":"[variables('machineSettings').osImageReference]",
                     "vmSize":"[variables('clusterSpec').vmSizeMember]",
                     "dataDiskSize":"[variables('clusterSpec').dataDiskSize]",
                     "machineIndex":"[copyindex()]",
                     "vmScripts":"[variables('vmScripts').scriptsToDownload]",
                     "commandToExecute":"[variables('vmScripts').regularNodeInstallCommand]"
                  }
               },
               "sharePointSetupUserAccountPassword":{
                  "value":"[parameters('sharePointSetupUserAccountPassword')]"
               },
               "sharePointFarmAccountPassword":{
                  "value":"[parameters('sharePointFarmAccountPassword')]"
               },
               "sharePointFarmPassphrasePassword":{
                  "value":"[parameters('sharePointFarmPassphrasePassword')]"
               },
               "apigeeAdminPassword":{
                  "value":"[parameters('apigeeAdminPassword')]"
               },
               "cred1Password":{
                  "value":"[variables('azureRmPassword')]"
               },
               "sysgain_ms_password":{
                  "value":"[variables('sysgainMsPassword')]"
               },
               "informatica_user_password":{
                  "value":"[parameters('informaticaUserPassword')]"
               },
                "sqlDWAdminPassword": {
                           "value": "[parameters('sqlDWAdminPassword')]"
                         },
                         "administratorLoginPassword": {
                                     "value": "[parameters('sqlServerPassword')]"
                                   }
            }
         }
      },
      {
         "apiVersion":"2017-08-31",
         "type":"Microsoft.ContainerService/managedClusters",
         "location":"[parameters('location')]",
         "name":"[variables('aksName')]",
         "properties":{
            "kubernetesVersion":"[parameters('kubernetesVersion')]",
            "dnsPrefix":"[variables('aksDnsPrefix')]",
            "agentPoolProfiles":[

            ],
            "linuxProfile":{

            },
            "servicePrincipalProfile":{
               "ClientId":"[parameters('servicePrincipalAppId')]",
               "Secret":"[parameters('servicePrincipalAppKey')]"
            },
            "aadProfile":{
               "serverAppSecret":"[parameters('AAD_ServerAppSecret')]"
            }
         }
      },
      {
         "apiVersion":"2019-04-01",
         "name":"[variables('agName')]",
         "type":"Microsoft.Network/applicationGateways",
         "location":"[parameters('location')]",
         "dependsOn":[

         ],
         "properties":{
            "sku":{

            },
            "sslCertificates":[
               {
                  "name":"[variables('agSslCertName')]",
                  "properties":{
                     "data":"[parameters('certificateBase64Encoded')]",
                     "password":"[parameters('certificatePassword')]"
                  }
               }
            ],
            "gatewayIPConfigurations":[

            ],
            "frontendIPConfigurations":[

            ],
            "frontendPorts":[

            ],
            "backendAddressPools":[

            ],
            "backendHttpSettingsCollection":[

            ],
            "httpListeners":[

            ],
            "requestRoutingRules":[

            ]
         }
      },
      {
         "type":"Microsoft.ContainerInstance/containerGroups",
         "name":"[parameters('containerGroupName')]",
         "apiVersion":"2018-10-01",
         "location":"[parameters('location')]",
         "dependsOn":[

         ],
         "properties":{
            "containers":[
               {
                  "name":"[parameters('containerName')]",
                  "properties":{
                     "image":"cnabquickstartstest.azurecr.io/simongdavies/run-duffle:latest",
                     "resources":{

                     },
                     "environmentVariables":[
                        {
                           "name":"SQL_MASTERKEYPASSWORD",
                           "secureValue":"[parameters('sql_masterkeypassword')]"
                        },
                        {
                           "name":"SQL_SAPASSWORD",
                           "secureValue":"[parameters('sql_sapassword')]"
                        },
                        {
                           "name":"AZURE_CLIENT_SECRET",
                           "secureValue":"[parameters('azure_client_secret')]"
                        },
                        {
                           "name":"WORDPRESS_DB_PASSWORD",
                           "value":"[parameters('mysqlPassword')]"
                        },
                        {
                           "name":"MYSQL_ROOT_PASSWORD",
                           "value":"[parameters('mysqlPassword')]"
                        },
                        {
                           "name":"password",
                           "value":"[parameters('mysqlPassword')]"
                        }
                     ]
                  }
               }
            ],
            "volumes":[
               {
                  "name":"[parameters('volumename')]",
                  "secret":{
                     "sslcertificateData":"[parameters('sslcertificateData')]",
                     "sslcertificatePwd":"[base64(parameters('sslcertificatePwd'))]"
                  }
               }
            ]
         }
      },
      {
         "apiVersion":"2016-09-30",
         "type":"Microsoft.ContainerService/containerServices",
         "location":"[parameters('location')]",
         "name":"[variables('kubernetesName')]",
         "properties":{
            "orchestratorProfile":{

            },
            "masterProfile":{

            },
            "agentPoolProfiles":[

            ],
            "linuxProfile":{

            },
            "servicePrincipalProfile":{
               "ClientId":"[parameters('servicePrincipalAppId')]",
               "Secret":"[parameters('servicePrincipalAppKey')]"
            }
         }
      },
      {
         "name":"[parameters('dataFactoryName')]",
         "apiVersion":"2017-09-01-preview",
         "type":"Microsoft.DataFactory/factories",
         "location":"[parameters('dataFactoryLocation')]",
         "properties":{

         },
         "resources":[
            {
               "name":"[concat(parameters('dataFactoryName'), '/SPAzureSsisIR')]",
               "type":"Microsoft.DataFactory/factories/integrationRuntimes",
               "dependsOn":[

               ],
               "apiVersion":"2017-09-01-preview",
               "properties":{
                  "type":"Managed",
                  "typeProperties":{
                     "computeProperties":{

                     },
                     "ssisProperties":{
                        "catalogInfo":{
                           "catalogServerEndpoint":"[parameters('azureSqlServerName')]",
                           "catalogAdminUserName":"[parameters('databaseAdminUserName')]",
                           "catalogAdminPassword":{
                              "type":"SecureString",
                              "value":"[parameters('databaseAdminPassword')]"
                           },
                           "catalogPricingTier":"[parameters('catalogPricingTier')]"
                        }
                     }
                  }
               }
            },
            {
               "type":"linkedservices",
               "name":"[variables('ftpLinkedServiceName')]",
               "dependsOn":[

               ],
               "apiVersion":"2015-10-01",
               "properties":{
                  "type":"FtpServer",
                  "typeProperties":{
                     "host":"[parameters('ftpHost')]",
                     "port":21,
                     "authenticationType":"Basic",
                     "username":"[parameters('ftpUser')]",
                     "password":"[parameters('ftpPassword')]",
                     "enableSsl":false,
                     "enableServerCertificateValidation":false
                  }
               }
            }
         ]
      },
      {
         "name":"[parameters('clusterName')]",
         "type":"Microsoft.HDInsight/clusters",
         "location":"East US 2",
         "apiVersion":"2015-03-01-preview",
         "dependsOn":[

         ],
         "tags":{

         },
         "properties":{
            "clusterVersion":"3.2",
            "osType":"Linux",
            "clusterDefinition":{
               "kind":"[parameters('clusterType')]",
               "configurations":{
                  "gateway":{
                     "restAuthCredential.isEnabled":true,
                     "restAuthCredential.username":"[parameters('clusterLoginUserName')]",
                     "restAuthCredential.password":"[parameters('clusterLoginPassword')]"
                  },
                  "clusterIdentity":{
                     "clusterIdentity.applicationId":"[parameters('servicePrincipalApplicationId')]",
                     "clusterIdentity.certificate":"[parameters('servicePrincipalCertificateContents')]",
                     "clusterIdentity.certificatePassword":"[parameters('servicePrincipalCertificatePassword')]",
                     "clusterIdentity.aadTenantId":"[concat('https://login.windows.net/',parameters('aadTenantId'))]",
                     "clusterIdentity.resourceUri":"https://management.core.windows.net/"
                  },
                  "hive-site":{
                     "javax.jdo.option.ConnectionDriverName":"com.microsoft.sqlserver.jdbc.SQLServerDriver",
                     "javax.jdo.option.ConnectionURL":"[concat('jdbc:sqlserver://', reference(resourceId(parameters('existingSQLServerResourceGroup'), 'Microsoft.Sql/servers', parameters('existingSQLServerName')), '2018-06-01-preview').fullyQualifiedDomainName, ';database=',parameters('newMetastoreDBName'),';encrypt=true;trustServerCertificate=true;create=false;loginTimeout=300')]",
                     "javax.jdo.option.ConnectionUserName":"[parameters('existingSQLServerUsername')]",
                     "javax.jdo.option.ConnectionPassword":"[parameters('existingSQLServerPassword')]"
                  },
                  "ambari-conf":{
                     "database-server":"[reference(resourceId(parameters('existingSQLServerResourceGroup'),'Microsoft.Sql/servers',parameters('existingSQLServerName')), '2018-06-01-preview').fullyQualifiedDomainName]",
                     "database-name":"[parameters('newMetastoreDBName')]",
                     "database-user-name":"[parameters('existingSQLServerUsername')]",
                     "database-user-password":"[parameters('existingSQLServerPassword')]"
                  }
               }
            },
            "storageProfile":{

            },
            "computeProfile":{
               "roles":[
                  {
                     "name":"headnode",
                     "targetInstanceCount":2,
                     "hardwareProfile":{
                        "vmSize":"Standard_D3"
                     },
                     "osProfile":{
                        "linuxOperatingSystemProfile":{
                           "username":"[parameters('sshUserName')]",
                           "password":"[parameters('sshPassword')]"
                        }
                     }
                  },
                  {
                     "name":"workernode",
                     "targetInstanceCount":"[parameters('clusterWorkerNodeCount')]",
                     "hardwareProfile":{
                        "vmSize":"Standard_D3"
                     },
                     "osProfile":{
                        "linuxOperatingSystemProfile":{
                           "username":"[parameters('sshUserName')]",
                           "password":"[parameters('sshPassword')]"
                        }
                     }
                  }
               ]
            }
         }
      },
      {
         "type":"Microsoft.DBforMySQL/servers",
         "apiVersion":"2017-12-01",
         "location":"[parameters('location')]",
         "name":"[variables('serverName')]",
         "sku":{

         },
         "properties":{
            "version":"[parameters('mysqlVersion')]",
            "administratorLogin":"[parameters('administratorLogin')]",
            "administratorLoginPassword":"[parameters('administratorLoginPassword')]",
            "storageProfile":{

            },
            "sslEnforcement":"Disabled"
         },
         "resources":[

         ]
      },
      {
         "type":"Microsoft.DBforPostgreSQL/servers",
         "apiVersion":"2017-12-01",
         "location":"[parameters('location')]",
         "name":"[variables('serverName')]",
         "sku":{

         },
         "properties":{
            "version":"[parameters('mysqlVersion')]",
            "administratorLogin":"[parameters('administratorLogin')]",
            "administratorLoginPassword":"[parameters('administratorLoginPassword')]",
            "storageProfile":{

            },
            "sslEnforcement":"Disabled"
         },
         "resources":[

         ]
      },
      {
         "type":"Microsoft.KeyVault/vaults",
         "apiVersion":"2018-02-14",
         "name":"[variables('keyVaultName')]",
         "location":"[parameters('location')]",
         "resources":[
            {
               "type":"secrets",
               "name":"VMPassword",
               "apiVersion":"2018-02-14",
               "dependsOn":[
                  "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
               ],
               "properties":{
                  "value":"[parameters('adminPassword')]"
               }
            }
         ]
      },
      {
         "type":"Microsoft.KeyVault/vaults/secrets",
         "name":"[concat(parameters('keyVaultName'), '/', parameters('secretName'))]",
         "apiVersion":"2018-02-14",
         "location":"[parameters('location')]",
         "dependsOn":[
            "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
         ],
         "properties":{
            "value":"[parameters('secretValue')]"
         }
      },
      {
         "type":"Microsoft.Web/connections",
         "apiVersion":"2018-07-01-preview",
         "location":"[parameters('location')]",
         "name":"[parameters('ftpConnectionName')]",
         "properties":{
            "api":{

            },
            "displayName":"ftp",
            "parameterValues":{
               "serverAddress":"[parameters('ftpServerAddress')]",
               "userName":"[parameters('ftpUsername')]",
               "password":"[parameters('ftpPassword')]",
               "serverPort":"[parameters('ftpServerPort')]",
               "isssl":"[variables('ftpisssl')]",
               "isBinaryTransport":"[variables('ftpisBinaryTransportftpisssl')]",
               "disableCertificateValidation":"[variables('ftpdisableCertificateValidation')]"
            }
         }
      },
      {
         "type":"Microsoft.Logic/workflows",
         "apiVersion":"2017-07-01",
         "name":"[parameters('logicAppName')]",
         "location":"[parameters('location')]",
         "dependsOn":[

         ],
         "properties":{
            "definition":{
               "$schema":"https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
               "contentVersion":"1.0.0.0",
               "parameters":{
                  "clientSecret":{
                     "type":"SecureString",
                     "defaultValue":"@parameters("
                  }
               },
               "triggers":{

               },
               "actions":{
                  "pingSite":{
                     "type":"Http",
                     "inputs":{
                        "uri":"[concat('https://', reference(resourceId('Microsoft.Web/sites', parameters('webAppName'))).hostNames[0])]",
                        "method":"Get",
                        "authentication":{
                           "type":"ActiveDirectoryOAuth",
                           "tenant":"[parameters('tenantId')]",
                           "audience":"[parameters('webAppClientId')]",
                           "clientId":"[parameters('logicAppClientId')]",
                           "secret":"@parameters('clientSecret')"
                        }
                     }
                  }
               },
               "outputs":{

               }
            },
            "parameters":{
               "clientSecret":{
                  "value":"[parameters('logicAppClientSecret')]"
               }
            }
         }
      },
      {
         "type":"Microsoft.Sql/managedInstances",
         "apiVersion":"2018-06-01-preview",
         "dependsOn":[

         ],
         "identity":{

         },
         "location":"[parameters('location')]",
         "name":"[parameters('managedInstanceName')]",
         "sku":{

         },
         "properties":{
            "administratorLogin":"[parameters('administratorLogin')]",
            "administratorLoginPassword":"[parameters('administratorLoginPassword')]",
            "subnetId":"[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]",
            "storageSizeInGB":"[parameters('storageSizeInGB')]",
            "vCores":"[parameters('vCores')]",
            "licenseType":"[parameters('licenseType')]"
         }
      },
      {
         "name":"[concat(parameters('automationAccountName'), '/', variables('automation').Asset.omsHypervReplicaRunAsAccount.name)]",
         "type":"microsoft.automation/automationAccounts/credentials",
         "apiVersion":"2015-10-31",
         "location":"[parameters('automationRegion')]",
         "dependsOn":[

         ],
         "tags":{

         },
         "properties":{
            "userName":"[parameters('onPremisesRunAsUserName')]",
            "password":"[parameters('onPremisesRunAsPassword')]",
            "description":"[variables('automation').Asset.omsHypervReplicaRunAsAccount.description]"
         }
      }
   ],
   "contentVersion":"",
   "parameters":{

   }
}